/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_APP_NANOPB_AUX_PB_H_INCLUDED
#define PB_APP_NANOPB_AUX_PB_H_INCLUDED
#include <pb.h>
#include "nanopb/nanopb.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* 当次应答错误码 */
typedef enum _AppPB_ACK_ErrorCode {
    AppPB_ACK_ErrorCode_SUCCEED = 0, /* 无错误,应答成功 */
    AppPB_ACK_ErrorCode_CRC_FAILED = 1, /* CRC校验失败 */
    AppPB_ACK_ErrorCode_CHK_FAILED = 2 /* CheckSum校验失败 */
} AppPB_ACK_ErrorCode;

/* Struct definitions */
/* 辅助应答消息 */
typedef struct _AppPB_ACK {
    AppPB_ACK_ErrorCode error_code;
} AppPB_ACK;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _AppPB_ACK_ErrorCode_MIN AppPB_ACK_ErrorCode_SUCCEED
#define _AppPB_ACK_ErrorCode_MAX AppPB_ACK_ErrorCode_CHK_FAILED
#define _AppPB_ACK_ErrorCode_ARRAYSIZE ((AppPB_ACK_ErrorCode)(AppPB_ACK_ErrorCode_CHK_FAILED+1))

#define AppPB_ACK_error_code_ENUMTYPE AppPB_ACK_ErrorCode


/* Initializer values for message structs */
#define AppPB_ACK_init_default                   {_AppPB_ACK_ErrorCode_MIN}
#define AppPB_ACK_init_zero                      {_AppPB_ACK_ErrorCode_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define AppPB_ACK_error_code_tag                 1

/* Struct field encoding specification for nanopb */
#define AppPB_ACK_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define AppPB_ACK_CALLBACK NULL
#define AppPB_ACK_DEFAULT NULL

extern const pb_msgdesc_t AppPB_ACK_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AppPB_ACK_fields &AppPB_ACK_msg

/* Maximum encoded size of messages (where known) */
#define AppPB_ACK_size                           2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
